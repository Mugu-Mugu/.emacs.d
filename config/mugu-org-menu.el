(require 'hydra)
(require 'org)

(mugu/defhydra mugu-org-agenda-hydra (:color amaranth :hint nil)
               "[AGENDA MENU]
=============================================================================================================================================="

               (((" " nil "[NAVIGATION]")
                 ("l" org-agenda-next-line "next line")
                 ("h" org-agenda-previous-line "previous line")
                 ("j" org-agenda-next-item "next item")
                 ("k" org-agenda-previous-item "previous item")
                 ("J" org-agenda-drag-line-forward "drag up")
                 ("K" org-agenda-drag-line-backward "drag bot"))
                ((" " nil "[ACTIONS]")
                 ("r" org-agenda-refile "refile")
                 (":" org-agenda-set-tags "set tags")
                 ("n" org-agenda-add-note "add note")
                 ("t" org-agenda-todo "set todos")
                 ("L" org-agenda-priority-up "increase priority")
                 ("H" org-agenda-priority-down "decrease priority")
                 ("a" org-attach "attach")
                 ("p" org-agenda-set-property "set property")
                 ("e" org-agenda-set-effort "set effort"))
                ((" " nil "[MARK]")
                 ("m" org-agenda-bulk-toggle "mark toogle")
                 ("M" org-agenda-bulk-toggle-all "mark toogle all")
                 ("%" org-agenda-bulk-mark-regexp "mark by regexp")
                 ()
                 (" " nil "[MODE]")
                 ("<tab>" org-agenda-entry-text-mode "toogle detail mode")
                 ("f" org-agenda-follow-mode "toogle follow mode"))
                ((" " nil "[GLOBAL ACTIONS]")
                 ("R" org-agenda-redo "refresh view")
                 ("W" org-agenda-write "save this agenda")
                 ("w" org-save-all-org-buffers "save all org files")
                 ("A" org-agenda-append-agenda "append another agenda view"))
                ((" " nil "[FILTERING]")
                 ("-" org-agenda-filter-remove-all "filter clear")
                 ("/" org-agenda-filter-by-tag "filter by tag")
                 ("!" org-agenda-filter-by-tag-refine "filter by tag (refined")
                 ("=" org-agenda-filter-by-regexp "filter by regexp")
                 ("<" org-agenda-filter-by-category "fitler by category")
                 ("*" org-agenda-filter-by-top-headline "filter by top headline"))
                ((" " nil "[TERMINATE SESSION]")
                 ("g" org-agenda-goto "goto" :color blue)
                 ("RET" org-agenda-goto "goto" :color blue)
                 ("q" org-agenda-quit "quit" :color blue)
                 ("Q" org-agenda-Quit "quit" :color blue)
                 ("x" org-agenda-exit "quit discard all change" :color blue)
                 ()
                 (" " nil "[EXIT MENU]")
                 ("C-g" nil "exit this menu" :color blue))))

;; Agenda view
;; (org-defkey org-agenda-mode-map "R" 'org-agenda-clockreport-mode)
;; (org-defkey org-agenda-mode-map "l" 'org-agenda-log-mode)
;; (org-defkey org-agenda-mode-map "v" 'org-agenda-view-mode-dispatch)
;; ,(org-defkey org-agenda-mode-map "D" 'org-agenda-toggle-diary)
  ;; ("\C-c\C-x\C-e" 'org-clock-modify-effort-estimate)
;; (org-defkey org-agenda-mode-map "!" 'org-agenda-toggle-deadlines)
;; (org-defkey org-agenda-mode-map "G" 'org-agenda-toggle-time-grid)
;; (org-defkey org-agenda-mode-map "i" 'org-agenda-diary-entry)
;; (org-defkey org-agenda-mode-map "c" 'org-agenda-goto-calendar)
;; (org-defkey org-agenda-mode-map "C" 'org-agenda-convert-date)
;; (org-defkey org-agenda-mode-map "M" 'org-agenda-phases-of-moon)
;; (org-defkey org-agenda-mode-map "S" 'org-agenda-sunrise-sunset)
;; (org-defkey org-agenda-mode-map "h" 'org-agenda-holidays)
;; (org-defkey org-agenda-mode-map "H" 'org-agenda-holidays)
;; (org-defkey org-agenda-mode-map "\C-c\C-n" 'org-agenda-next-date-line)
;; (org-defkey org-agenda-mode-map "\C-c\C-p" 'org-agenda-previous-date-line)
;; (org-defkey org-agenda-mode-map "f" 'org-agenda-later)
;; (org-defkey org-agenda-mode-map "b" 'org-agenda-earlier)
;; (org-defkey org-agenda-mode-map "\C-c\C-x\C-c" 'org-agenda-columns)

;; (org-defkey org-agenda-mode-map "\C-c\C-x>" 'org-agenda-remove-restriction-lock)

;; Clocking
;; (org-defkey org-agenda-mode-map "\C-c\C-x\C-i" 'org-agenda-clock-in)
;; (org-defkey org-agenda-mode-map "I" 'org-agenda-clock-in)
;; (org-defkey org-agenda-mode-map "\C-c\C-x\C-o" 'org-agenda-clock-out)
;; (org-defkey org-agenda-mode-map "O" 'org-agenda-clock-out)
;; (org-defkey org-agenda-mode-map "\C-c\C-x\C-x" 'org-agenda-clock-cancel)
;; (org-defkey org-agenda-mode-map "X" 'org-agenda-clock-cancel)
;; (org-defkey org-agenda-mode-map "\C-c\C-x\C-j" 'org-clock-goto)
;; (org-defkey org-agenda-mode-map "J" 'org-agenda-clock-goto)

;; ???? not managed yet
  ;; ("~" org-agenda-limit-interactively)
;; (org-defkey org-agenda-mode-map "[" 'org-agenda-manipulate-query-add)
;; (org-defkey org-agenda-mode-map "]" 'org-agenda-manipulate-query-subtract)
;; (org-agenda-show-scroll-down)
;; (org-agenda-show-and-scroll-up)
;; (org-defkey org-agenda-mode-map "{" 'org-agenda-manipulate-query-add-re)
;; (org-defkey org-agenda-mode-map "}" 'org-agenda-manipulate-query-subtract-re)
;; (org-defkey org-agenda-mode-map ";" 'org-timer-set-timer)
;; (define-key org-agenda-mode-map "?" 'org-agenda-show-the-flagging-note)
;; (org-defkey org-agenda-mode-map "\C-c\C-x\C-mg"    'org-mobile-pull)
;; (org-defkey org-agenda-mode-map "\C-c\C-x\C-mp"    'org-mobile-push)
;; (org-defkey org-agenda-mode-map "R" 'org-agenda-clockreport-mode)
;; (org-defkey org-agenda-mode-map "l" 'org-agenda-log-mode)
;; (org-defkey org-agenda-mode-map "v" 'org-agenda-view-mode-dispatch)
;; (org-defkey org-agenda-mode-map "D" 'org-agenda-toggle-diary)
;; (org-defkey org-agenda-mode-map "!" 'org-agenda-toggle-deadlines)

;;; replace arrows binding by hjkl one
;;; can be used in insert mode (shift-ones are not really interesting there)
;;; is also used by another hydra
(defvar mugu/org-menu-hjkl-heads
 '(((" " nil "[STRUCTURE EDIT - Level]")
    ("M-L" org-shiftmetaright "promote subtree")
    ("M-H" org-shiftmetaleft "demote subtree")
    ()
    ("M-l" org-metaright "promote heading")
    ("M-h" org-metaleft "demote heading"))
   ((" " nil "[STRUCTURED EDIT - Place]")
    ("M-k" org-metaup   "↑ tree")
    ("M-j" org-metadown "↓ tree")
    ()
    ("M-K" org-shiftmetaup "↑ tree or table")
    ("M-J" org-shiftmetadown "↓ tree or table"))
   ((" " nil "[ATTRIBUTES]")
    ("C-k" org-shiftcontrolup "↑ clock")
    ("C-j" org-shiftcontroldown "↓ clock")
    ()
    ("J" org-shiftdown "↓ priority")
    ("K" org-shiftup "↑ priority"))
   ((" " nil "[TODO]")
    ("C-l" org-shiftcontrolright "→ change todo sequence")
    ("C-h" org-shiftcontrolleft "← change todo sequence")
    ()
    ("H" org-shiftleft "→ cycle todo/item/misc")
    ("L" org-shiftright "← cycle todo/item/misc"))
   ((" " nil "[EXIT]")
    ("C-g" nil "quit")))
 "Reusable Heads describing structured commands for org mode based around hjkl modifiers")
 

(defvar mugu/org-menu-cmd-heads
  '(((" " nil "[NAVIGATION]")
     ("k" outline-previous-visible-heading "↑ headline")
     ("j" outline-next-visible-heading "↓ headline")
     ("l" org-forward-heading-same-level "↓ headline same level")
     ("h" org-backward-heading-same-level "↑ headline same level")
     ("b" outline-up-heading "↖ parent headline"))
    ((" " nil "[COPY]")
     ("m" org-mark-element "✔ mark")
     ("M" org-mark-subtree "✔✔ mark all")
     ()
     ("y" org-copy-subtree "copy subtree")
     ("d" org-cut-subtree "subtree  ")
     ("p" org-paste-subtree "paste subtree"))
    ((" " nil "[MISC]")
     ("r" org-refile "refile subtree")
     ("t" org-toggle-heading "morph headline/list")
     ("s" org-sort "sort subtree")
     ()
     ("/" org-sparse-tree "search" :color blue)
     ("RET" org-insert-heading-respect-content "insert" :color blue)
     ("o" org-insert-todo-heading "insert todo" :color blue)
     ("q" nil "exit" :color blue)))
  "reusable heads describing commands for org mode")

(mugu/defhydra mugu-org-hjkl-hydra (:color pink :hint nil)
               "[HJKL bindings for ORG mode]"
               mugu/org-menu-hjkl-heads)
(mugu/defhydra-merged mugu-org-cmd-hydra
                      (:color pink :hint nil)
                      "[cmd bindings for ORG mode]"
                      mugu/org-menu-cmd-heads
                      mugu/org-menu-hjkl-heads)

;;; general main menu meant to be used outside or within org
(mugu/defhydra mugu-org-main-menu (:color blue :hint nil :idle 0.1)
               " ORG MODE MENU
^^^^^^^^----------------------------------------------------------------------------------------------- "
               (((" " nil "[AGENDA]")
                 ("a" org-agenda "agenda gateway")
                 ("o" (org-agenda nil "ca") "agenda overview"))
                ((" " nil "[OTHERS]")
                 ("l" org-store-link "store link")
                 ("c" org-capture "capture"))))

(defalias 'mugu-org-internal-menu 'mugu-org-cmd-hydra/body)
(defalias 'mugu-org-agenda-menu 'mugu-org-agenda-hydra/body)
(defalias 'mugu-org-hjkl-menu 'mugu-org-hjkl-hydra/body)

(provide 'mugu-org-menu)
